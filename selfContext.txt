using stub to check if the compiler is called on each execution

$filter is to directlty filter out contents - if needed to transform we must use $type and call $tranform within that

The direct filters usually represent each set of json (for each objects in the array)
eg:In array1: [ { a: 1, b: 'x' } , { a: 2, b: 'y' }, { a: 3, b: 'z' } ], Here {a:1, b:x} is one set of json(first array object)
So The filer will be [{a: number},{b: string}] -  this will be applied across all array objects


If using explicit initial context - The values sent in target will get replaced by input values that passes the filter - based on the array index
Suppose if 
123456 is the target and in input if we have 
789 - If 8 gets filtered out and only 7 and 9 passess, the output will be 
729456


Scenarios:
Regression:
- before:
    - Add filters to jsxl - using useFilters()
    - compile multiple filters - using compileMultiple() - useFilter already compiles the filters no need to do it again
- Test:
    - execute multiple times using different filters
    - compile again using different filter(directly call jsxl) - execute 
    - execute again using the previously added filter

- before:
    - add a filter and tranform function
- Test:
    - perform validation by setting an explicit context

- before:
    - add a filter with many modifiers
- Test:
    - compile and execute


Have a set of regression scripts - these will include generic functionality scenarios.
Then have Seperate test cases based on the features:
- filters - using multiple
- transform
- modifiers
- context - explicit context
- merge


wrapper function:
- created a function that can execute calling jsxl directly
To do:
- Create a logic to map inputjson with the filter and output values by embedding some values in the inputdata itself
- In the wrapper function get those filter, output values and verify 


